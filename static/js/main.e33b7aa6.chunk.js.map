{"version":3,"sources":["context.js","components/contacts/Contacts.js","components/contacts/Contactss.js","components/layout/Header.js","components/pages/About.js","components/layout/TextInputGroup.js","components/contacts/AddContacts.js","components/contacts/EditContact.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Contactss","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contacts","showContactInfo","onDeleteClick","a","delete","console","log","name","email","phone","className","onClick","style","cursor","float","color","bind","to","marginRight","ContactList","Fragment","key","Header","branding","href","defaultProps","about","classnames","TextInputGroup","label","placeholder","onChange","error","htmlFor","protoTypes","PropTypes","string","isRequired","func","AddContacts","errors","e","target","onSubmit","preventDefault","newContract","post","history","push","EditContacts","updateContact","match","params","put","NotFound","test","title","fetch","then","response","json","App","exact","path","component","About","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.e33b7aa6.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"DELETE_CONTACT\":\n      return {\n        ...state,\n        Contactss: state.Contactss.filter(\n          (contact) => contact.id !== action.payload\n        ),\n      };\n      case \"ADD_CONTACT\":\n      return {\n        ...state,\n        Contactss:[action.payload,...state.Contactss]\n      };\n      case \"UPDATE_CONTACT\":\n        return {\n          ...state,\n          Contactss:state.Contactss.map(contact =>\n            contact.id === action.payload.id? (contact = action.payload):contact)\n        };\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  state = {\n    Contactss: [],\n    dispatch: (action) => {\n      this.setState((state) => reducer(state, action));\n    },\n  };\n\n  async componentDidMount(){\n    \n    // on behalf of refactoring with async and await /changed the method signature\n    // axios.get('https://jsonplaceholder.typicode.com/users')\n    // .then(res=> this.setState({Contactss:res.data}));\n\n    const res = await axios.get('https://jsonplaceholder.typicode.com/users')\n   this.setState({Contactss:res.data});\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Consumer } from \"../../context\";\nimport axios from \"axios\";\nimport {Link} from \"react-router-dom\"\n\nclass Contacts extends Component {\n  //below mentiobned\n  //     static propTypes = {\n  //     name: PropTypes.string.isRequired,\n  //     email: PropTypes.string.isRequired,\n  //     phone: PropTypes.string.isRequired,\n  //   };\n\n  state = {\n    showContactInfo: false,\n  };\n\n  // refactoring wih await async in the arrow function\n  onDeleteClick = async (id, dispatch) => {\n    \n    try {\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\n    } catch (e) {\n      console.log(\"exception triggered\");\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\n    }\n\n    console.log(\"delete clicked in Contacts\");\n  };\n\n  render() {\n    const { id, name, email, phone } = this.props.contact;\n    const { showContactInfo } = this.state;\n    return (\n      <Consumer>\n        {(value) => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card card-body mb-3\">\n              <h4>\n                {name}{\" \"}\n                <i\n                  onClick={() =>\n                    this.setState({\n                      showContactInfo: !this.state.showContactInfo,\n                    })\n                  }\n                  className=\"fas fa-sort-down\"\n                  style={{ cursor: \"pointer\" }}\n                />\n                <i\n                  className=\"fa fa-times\"\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\n                />\n                  <Link to={`contact/edit/${id}`}>\n                  <i \n                  className=\"fas fa-pencil-alt\"\n                  style={{\n                    cursor:'pointer',\n                    float:'right',\n                    color:'black',\n                    marginRight:'1rem'\n                  }}\n                  ></i>\n                  </Link>\n\n              </h4>\n              {showContactInfo ? (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">Email: {email}</li>\n                  <li className=\"list-group-item\">phone number:{phone}</li>\n                </ul>\n              ) : null}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\n// this is as usull in custom proptyeps but we can include this in the class itslelf as a static object as above\nContacts.propTypes = {\n  contact: PropTypes.object.isRequired,\n};\nexport default Contacts;\n","import React, { Component } from \"react\";\nimport Contacts from \"./Contacts\";\nimport {  Consumer } from '../../context';\n\n\nclass ContactList extends Component {\n \n\n\n  render() {\n\n      return(\n        <Consumer>\n        {value => {\n          const {Contactss} = value;\n          return(\n            \n            <React.Fragment>\n            <h1 className= \"display-4 mb-2\"><span className =\"text-danger\">Contact</span>List</h1>\n            {Contactss.map((contact) => (\n              <Contacts\n                key={contact.id}\n                contact={contact}\n              />\n            \n            ))}\n          </React.Fragment>\n\n\n          )\n        }}\n        </Consumer>\n      )\n\n\n  }\n}\nexport default ContactList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nfunction Header(props) {\n  const { branding } = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand\">\n          {branding}\n        </a>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\"></i> Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contact/add\" className=\"nav-link\">\n                <i className=\"fas fa-plus\"></i> Add Contact\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n                <i className=\"fas fa-question\"></i>About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n}\n\n//adding of defualt prpotypes\nHeader.defaultProps = {\n  branding: \"My App\",\n};\n\n//from custom propTypes we can validate the parsed value type\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","import React from 'react'\n\nexport default function about() {\n    return (\n        <div>\n            <h1 className=\"display-4\">About Contact Manager</h1>\n            <p className=\"lead\">Simple app to manage contacts</p>\n            <p classnames=\"text-secondary\">Version 1.0.0</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { PropTypes } from 'prop-types';\nimport classnames from 'classnames';\n\n const TextInputGroup =  ({\n        label,\n        name,\n        value,\n        placeholder,\n        type,\n        onChange,\n        error\n\n\n }) => {\n    return (\n        <div className=\"form-group\">\n        \n                        <label htmlFor={name}>{label}</label>\n                        <input \n                        type={type} \n                        name={name}\n                        className={  classnames('form-control form-control-lg',{'is-invalid':error})}\n                        placeholder={placeholder}\n                        value={value}\n                        onChange={onChange}/>\n                         {error && <div className=\"invalid-feedback\">{error}</div>}\n                        </div>\n    );\n};\n\nTextInputGroup.protoTypes ={\n    label:PropTypes.string.isRequired,\n    name:PropTypes.string.isRequired,\n    placeholder:PropTypes.string.isRequired,\n    value:PropTypes.string.isRequired,\n    type:PropTypes.string.isRequired,\n    onChange:PropTypes.func.isRequired,\n    error:PropTypes.string\n}\n\nTextInputGroup.defaultProps={\n    type:'text'\n}\nexport default TextInputGroup;","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport axios from \"axios\";\n\nclass AddContacts extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {},\n  };\n\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    //check for the errors\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is required\" } });\n      return;\n    }\n\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is required\" } });\n      return;\n    }\n\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Phone is required\" } });\n      return;\n    }\n\n    const newContract = {\n      name,\n      email,\n      phone,\n    };\n\n    const res = await axios.post('https://jsonplaceholder.typicode.com/users',newContract)\n    \n    dispatch({ type: \"ADD_CONTACT\", payload: res.data })\n\n    //clear the form after submitting\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {},\n    });\n\n    //redirect to the home page to view the resulsts after adding\n    this.props.history.push('/');\n\n  };\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {(value) => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">\n                <h2>Add contact</h2>\n              </div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter name\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter email\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter phone\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Add Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\nexport default AddContacts;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport axios from \"axios\";\n\nclass EditContacts extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {},\n  };\n\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n    const res = await axios.get(\n      `https://jsonplaceholder.typicode.com/users/${id}`\n    );\n\n    const contact = res.data;\n\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone,\n    });\n  }\n\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    //check for the errors\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is required\" } });\n      return;\n    }\n\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is required\" } });\n      return;\n    }\n\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Phone is required\" } });\n      return;\n    }\n\n    const updateContact ={\n        name,\n        email,\n        phone\n    }\n\n    const { id } = this.props.match.params;\n\n    const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`,updateContact);\n\n    dispatch({type:'UPDATE_CONTACT', payload:res.data})\n\n    //clear the form after submitting\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {},\n    });\n\n    //redirect to the home page to view the resulsts after adding\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {(value) => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">\n                <h2>Edit contact</h2>\n              </div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter name\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter email\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter phone\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Update Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\nexport default EditContacts;\n","import React from 'react'\n\nexport default function NotFound() {\n    return (\n        <div>\n            <h1 className=\"display-4\"><span className=\"text-danger\">404</span> Page Not Found </h1>\n            <p className=\"lead\">Sorry, that page does not exist</p>\n\n        </div>\n    )\n}\n","import React, { Component } from 'react'\n\nexport default class test extends Component {\n    \n    state = {\n        title:'',\n        id:''\n    };\n\n\n    //fired off after the component mounts\n    // http methods get called inside this and if you fetching data within the component this is usefull and putting it insde the component state\n    componentDidMount(){\n        console.log(\"componenet DID mount called\")\n\n        fetch('https://jsonplaceholder.typicode.com/todos/1')\n  .then(response => response.json())\n  .then(data => {\n    this.setState({\n        title:data.title,\n        id:data.id\n    })  \n    console.log(data)})\n    }\n    \n    //this will run before the did mount method\n        //method depricated and we have to add the flag as UNSAFE_ in the front of the method name\n    // componentWillMount(){\n    //     console.log(\"componenet Will mount called\")\n\n    // }\n    \n    // //only runs when the component updates(changing the state ) to see take this method above the contacts component render method \n    // // this will run after re rendering of the component\n    // componentDidUpdate(){\n    //     console.log(\"component did update called\");\n    // }\n\n    // //this method will execute befoire the did update method once the component re re rendered\n    //     //method depricated and we have to add the flag as UNSAFE_ in the front of the method name\n    // componentWillUpdate(){\n    // console.log(\"component will update called\");\n    // }\n\n    // //this executes when the component runs the properties finds the new properties used with the Redux\n    // // new props can be taken from the nextProps and they can be manipulated \n    // //method depricated and to use it we have to add the flag as UNSAFE_ in the front of the method name\n    // componentWillReceiveProps(nextProps,nextState){\n    //     console.log(\"component WillReceiveProps  called\");\n    // }\n\n    // // return a state or null must be returned \n    // static getDerivedStateFromProps(nextProps, prevState){\n       \n       \n    //    // here need to return a state not to use the set state \n    //     // return null;\n\n    //     return{\n    //         test:'new state'\n    //     }\n    // }\n\n    // // this is executed before the dom is updated\n    // getSnapshotBeforeUpdate(prevProps, prevState){\n    //     console.log(\"component getSnapshotBeforeUpdate  called\");\n\n    // }\n\n\n    render() {\n\n        const{title,id} = this.state\n\n        return (\n            <div>\n            <h1>{title}</h1>\n            <h1>{id}</h1>\n            </div>\n        )\n    }\n}\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\n// import Contacts from \"./components/Contacts\";\nimport Contactss from \"./components/contacts/Contactss\";\nimport Header from \"./components/layout/Header\";\nimport About from \"./components/pages/About\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport { Provider } from \"./context\";\nimport AddContacts from \"./components/contacts/AddContacts\";\nimport EditContacts from \"./components/contacts/EditContact\";\nimport NotFound from \"./components/pages/NotFound\";\nimport test from \"./components/test/Test\";\n\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n        <div className=\"App\">\n          <Header branding=\"Contact Manager\" />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/about\" component={About} />\n              <Route exact path=\"/\" component={Contactss} />\n              <Route exact path=\"/contact/add\" component={AddContacts} />\n              <Route exact path=\"/contact/edit/:id\" component={EditContacts} />\n              <Route exact path=\"/test\" component={test} />\n\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}